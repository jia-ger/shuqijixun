https://codeforces.com/contest/2122/problem/C

让x小y小的与x大y大的结合 让x大y小与 x小y大结合 可以推理出来这些点可以两两配对不会出现某个点多的情况

#include <bits/stdc++.h>
using namespace std;
#define itn int
#define icn cin
#define int long long
#define endl '\n'
typedef pair<int,int> PII;
const int N=2e5+10;
const int INF=1e18;
const int mod=998244353;
#define ll __int128_t

struct node{
	int x,p;
}dx[N],dy[N];

bool xsmall[N],ysmall[N];
void solve()
{ 
  int n;cin>>n;
  for(int i=1;i<=n;i++)
  { int x,y;
  	cin>>x>>y;
    dx[i].x=x;
	dy[i].x=y;
	dx[i].p=dy[i].p=i;
  }
  sort(dx+1,dx+n+1,[](node q,node p){
  	return q.x<p.x;
  });
  sort(dy+1,dy+n+1,[](node q,node p){
  	return q.x<p.x;
  });
        for(int i=1;i<=n/2;i++){
			xsmall[dx[i].p]=true;
			ysmall[dy[i].p]=true;
		}
		for(int i=n/2+1;i<=n;i++){
			xsmall[dx[i].p]=false;
			ysmall[dy[i].p]=false;
		}//多测清空
	vector<int> xsys,xbys,xsyb,xbyb; 
		for(int i=1;i<=n;i++){
			if(xsmall[i]&&ysmall[i])xsys.push_back(i);
			if(!xsmall[i]&&ysmall[i])xbys.push_back(i);
			if(xsmall[i]&&!ysmall[i])xsyb.push_back(i);
			if(!xsmall[i]&&!ysmall[i])xbyb.push_back(i);
		}
		for(int i=0;i<xsys.size();i++){
			cout<<xsys[i]<<" "<<xbyb[i]<<endl;
		}
		for(int i=0;i<xsyb.size();i++){
			cout<<xsyb[i]<<" "<<xbys[i]<<endl;
		}	
} 


signed main(){
   cin.tie(0)->sync_with_stdio(0);	 
   int T=1; 
   cin>>T;
   while(T--)solve();
   
	return 0;
}
  
