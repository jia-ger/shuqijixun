https://atcoder.jp/contests/abc236/tasks/abc236_e

思路：https://www.luogu.com.cn/article/sfzlhgp7

#include <bits/stdc++.h>
using namespace std;
#define itn int
#define icn cin
#define int long long
#define endl '\n'
typedef pair<int,int> PII;
const int N=1e5+10;
const int mod=998244353;
const int INF=1e18;
#define ll __int128_t

double dp[N][2];//0是不选这个数 1是选这个数 
double a[N];
itn n;
bool check(double mid)//求平均数 
{
	memset(dp,0,sizeof dp);
	for(int i=1;i<=n;i++)
	{
		dp[i][0]=dp[i-1][1];
		dp[i][1]=max(dp[i-1][0],dp[i-1][1])+a[i]-mid;
	}
	return max(dp[n][0],dp[n][1])>=0;//大于说明mid小啦 所以l右移 
}
bool check1(int mid)//求中位数 
{
	memset(dp,0,sizeof dp);
	for(int i=1;i<=n;i++)
	{
		dp[i][0]=dp[i-1][1];
		if(a[i]>=mid)dp[i][1]=max(dp[i-1][0],dp[i-1][1])+1;
		else dp[i][1]=max(dp[i-1][0],dp[i-1][1])-1;
	}
	return max(dp[n][0],dp[n][1])>=1;
}
void solve() {
	
	cin>>n;
	for(itn i=1; i<=n; i++)
	cin>>a[i];
    double l=0,r=*max_element(a+1,a+n+1);
   
    while(r-l>=0.00001)
    {
    	double mid=(l+r)/2;
    	if(check(mid))l=mid+0.00001;//要求误差10^-3 那么让小数多两位计算 
    	else r=mid-0.00001;
    	
	}
	int l1=0,r1=(int)*max_element(a+1,a+n+1);
	while(l1<r1)
	{
		int mid=l1+r1+1>>1;
		if(check1(mid))l1=mid;
		else r1=mid-1;
	} 
    printf("%lf\n%d",l,l1);
}


signed main() {
	cin.tie(0)->sync_with_stdio(0);
	int T=1;
//  cin>>T;
	while(T--)solve();

	return 0;
}
